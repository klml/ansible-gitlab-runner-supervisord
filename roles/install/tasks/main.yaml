- name: download the latest version of Gitlab Runner
  get_url:
    url: https://gitlab-runner-downloads.s3.amazonaws.com/latest/binaries/gitlab-runner-linux-amd64
    dest: /home/$USER/bin/gitlab-runner


- name: Make it executable
  file:
    path: /home/$USER/bin/gitlab-runner
    mode: u+x


- name: Optional check runner version
  shell: |
   /home/$USER/bin/gitlab-runner -v
  register: runnerversion


- name: runner version
  debug:
    var: runnerversion.stdout_lines

- name: Create a working directory for the runner
  file:
    path: /home/$USER/gitlab-runner
    state: directory


- name: Register the runner
  shell: |
    /home/$USER/bin/gitlab-runner register -u {{ CI_SERVER_URL }} -r {{ REGISTRATION_TOKEN }} --tag-list {{ TAG_LIST }} --executor {{ EXECUTOR }} --non-interactive


# Configure the supervisord service

- name: Create a shell script that keeps the call for the runner
  copy:
    src: "{{ role_path }}/files/gitlab-runner.sh"
    dest: /home/$USER/bin/gitlab-runner.sh


- name: Make it executable
  file:
    path: /home/$USER/bin/gitlab-runner.sh
    mode: u+x


- name: Create supervisord ini
  copy:
    src: "{{ role_path }}/files/gitlab-runner.ini"
    dest: /home/$USER/etc/services.d/gitlab-runner.ini


- name: Tell supervisord to refresh its configuration and start the service
  supervisorctl:
    name: gitlab-runner
    state: present


- name: Tell supervisord to refresh its configuration and start the service
  supervisorctl:
    name: gitlab-runner
    state: started


- name: Optional check supervisorctl status
  shell: |
   supervisorctl status
  register: supervisorctlstatus


- name: If it is not in state RUNNING, check your configuration
  debug:
    var: supervisorctlstatus.stdout_lines
